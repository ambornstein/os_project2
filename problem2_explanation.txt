The FedOops logistic chain was optimimzed by implementing mutex locks and conditional variables. The mutex lock prevents threading conflicts and deadlocks. The conditional variables were used to deploy members of the teams according to their priority in the queues and their team membership. Deadlocks can occur if all stations are occupied and each worker is deprived access to a required station by another worker in the same situation. This deadlock is avoided by preemptive claiming of stations by workers that require access, allowing them to process all the instructions that come with their package without rescource constraints imposed by other workers. Handling packages this way allows workers to quickly complete their job and activate the next worker on their team. The parallelism of the process is restricted by the station occupancy policy, which allows workers to claim stations immediately when they have the need for them, making any worker that requires the same station wait, even if the claiming worker has not started using the station yet. This is a necessary synchronization flaw because it prevents deadlocks and ensures that workers can complete their tasks as quickly as possible. To maximize the parallelism, workers release stations as they complete their instructions. This is viable because there is no longer a chance for conflict.